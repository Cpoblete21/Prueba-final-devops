name: Deploy to ECR and ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # Ensure correct region here

      # Step 1: Create ECR Repository (if not already created)
      - name: Create ECR Repository
        run: |
          aws ecr describe-repositories --repository-name prueba-final-devops || aws ecr create-repository --repository-name prueba-final-devops

      # Step 2: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/prueba-final-devops:latest .

      # Step 4: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/prueba-final-devops:latest
       # Step 5: Install Snyk CLI
      - name: Install Snyk CLI
        run: |
          npm install -g snyk  # Install Snyk globally    
      # Step 6: Scan Docker image with Snyk (after pushing to ECR)
      - name: Scan Docker image in ECR with Snyk
        run: |
          snyk container test ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/prueba-final-devops:latest || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Make sure to set SNYK_TOKEN in GitHub secrets

      # Optional Step: Scan Terraform files with Snyk
      - name: Scan Terraform files with Snyk
        run: |
          snyk test --file=./Terraform/prueba_devops/main.tf
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Ensure SNYK_TOKEN is set as a secret in GitHub

      # Optional Step: Run application security scan with Snyk
      - name: Scan application code with Snyk
        run: |
          snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      # Step 5: Deploy to ECS (optional, re-enable when you're ready)
      # - name: Deploy to ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     cluster: cluster-prueba2-devops
      #     service: serviceprueba2
      #     task-definition: ./TaskPrueba2-revision4.json
